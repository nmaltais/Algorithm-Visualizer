{"version":3,"sources":["components/Navbar.js","components/Pathfinding.js","components/sorting/sorting-algorithms.js","components/sorting/Animation.js","components/sorting/SortingClassComponent.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","toggleOpenSidebarBtn","setState","prevState","showOpenSidebarBtn","state","this","toggleSidebar","visible","Nav","exact","to","onClick","className","activeClassName","children","Transition","animation","duration","Button","icon","id","Icon","name","Sidebar","as","Menu","inverted","direction","vertical","width","onHidden","onVisible","style","zIndex","Item","role","tabIndex","float","onKeyUp","Header","Component","Pathfinding","swap","a","b","arr","temp","BubbleSort","list","steps","swapped","count","push","action","pos","length","i","j","orderedList","info","title","worstTime","bestTime","avgTime","space","InsertionSort","forEach","el","SelectionSort","sortedArrLen","cur","resetAnimation","currentStep","timeOut","lastRequestID","barRefs","setAnimationState","cancelAnimationFrame","current","clearTimeout","num","backgroundColor","height","borderTop","resetbarRefs","SortingClassComponent","getAlgOutput","path","algOutput","slice","createBarsFromList","localBars","map","ref","React","createRef","bar","key","maxWidth","bars","animationState","changeSpeed","e","speedPercentageRef","target","value","speedPercentage","lastCompared","lastSwapped","lastCursorPos","match","alg","params","prevProps","console","log","Grid","stackable","Row","Column","content","disabled","playAnimation","requestAnimationFrame","step","iHeight","iColor","innerText","parseInt","setTimeout","type","min","max","onChange","withRouter","App","margin","minHeight","padding","Pushable","Pusher","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.19c73b46.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { Component } from 'react';\nimport {\n  Menu,\n  Sidebar,\n  Button,\n  Transition,\n  Icon,\n} from 'semantic-ui-react';\nimport { NavLink } from 'react-router-dom';\nimport './Navbar.scss';\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { showOpenSidebarBtn: false };\n  }\n\n  toggleOpenSidebarBtn = () => {\n    this.setState((prevState) => ({ showOpenSidebarBtn: !prevState.showOpenSidebarBtn }));\n  };\n\n  render() {\n    const { showOpenSidebarBtn } = this.state;\n    const { toggleSidebar, visible } = this.props;\n\n    const Nav = (props) => (\n      <NavLink\n        exact\n        to={props.to}\n        onClick={props.onClick}\n        className={props.className}\n        activeClassName=\"active\"\n      >\n        {props.children}\n      </NavLink>\n    );\n\n    return (\n      <>\n        <Transition visible={showOpenSidebarBtn} animation=\"fade right\" duration={700}>\n          <Button\n            icon\n            id=\"openSidebarBtn\"\n            onClick={() => toggleSidebar('push')}\n          >\n            <Icon name=\"bars\" />\n          </Button>\n        </Transition>\n\n        <Sidebar\n          as={Menu}\n          inverted\n          animation=\"push\"\n          direction=\"left\"\n          vertical\n          width=\"thin\"\n          visible={visible}\n          onHidden={this.toggleOpenSidebarBtn}\n          onVisible={this.toggleOpenSidebarBtn}\n          style={{ zIndex: 20 }}\n        >\n          <Menu.Item>\n            TOPICS\n            <span\n              id=\"closeSidebarBtn\"\n              role=\"button\"\n              tabIndex={0}\n              style={{ float: 'right' }}\n              onClick={() => toggleSidebar('push')}\n              onKeyUp={() => toggleSidebar('push')}\n            >\n              X\n            </span>\n          </Menu.Item>\n          <Menu.Item>\n            <Menu.Header>Sorting</Menu.Header>\n            <Menu.Menu>\n              <Menu.Item as={Nav} to=\"/sorting/insertion-sort\" name=\"Insertion Sort\" />\n              <Menu.Item as={Nav} to=\"/sorting/bubble-sort\" name=\"Bubble Sort\" />\n              <Menu.Item as={Nav} to=\"/sorting/selection-sort\" name=\"Selection Sort\" />\n              <Menu.Item as={Nav} to=\"/sorting/merge-sort\" name=\"Merge Sort\" />\n            </Menu.Menu>\n          </Menu.Item>\n\n          <Menu.Item>\n            <Menu.Header>Pathfinding</Menu.Header>\n            <Menu.Menu>\n              <Menu.Item as={Nav} to=\"/pathfinding/DFS\" name=\"DFS\" />\n              <Menu.Item as={Nav} to=\"/pathfinding/BFS\" name=\"BFS\" />\n              <Menu.Item as={Nav} to=\"/pathfinding/a-star\" name=\"A Star\" />\n            </Menu.Menu>\n          </Menu.Item>\n        </Sidebar>\n      </>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from 'react';\n\nfunction Pathfinding() {\n  return (\n    <p>Pathfinding Page</p>\n  );\n}\n\nexport default Pathfinding;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable no-plusplus */\n\nfunction swap(a, b, arr) {\n  const temp = arr[b];\n  arr[b] = arr[a];\n  arr[a] = temp;\n}\n\nexport function BubbleSort(list) {\n  const steps = [];\n  let swapped = true;\n  let count = 1;\n  steps.push({ action: 'move cursor', pos: list.length - count });\n  while (swapped) {\n    swapped = false;\n    for (let i = 0; i < list.length - count; i++) {\n      steps.push({ action: 'compare', i, j: i + 1 });\n      if (list[i] > list[i + 1]) {\n        swapped = true;\n        swap(i, i + 1, list);\n        steps.push({ action: 'swap', i, j: i + 1 });\n      }\n    }\n    count += 1;\n    if (list.length - count >= 0) steps.push({ action: 'move cursor', pos: list.length - count });\n  }\n  return {\n    orderedList: list,\n    steps,\n    info: {\n      title: 'Bubble Sort',\n      worstTime: 'O(n^2)',\n      bestTime: 'O(n)',\n      avgTime: 'O(n^2)',\n      space: 'O(n)',\n    },\n  };\n}\n\nexport function InsertionSort(list) {\n  const steps = [];\n  list.forEach((el, i) => {\n    let j = i;\n    steps.push({ action: 'move cursor', pos: i });\n    if (j > 0) steps.push({ action: 'compare', i: j - 1, j });\n    while (j > 0 && list[j - 1] > list[j]) {\n      swap(j - 1, j, list);\n      steps.push({ action: 'swap', i: j - 1, j });\n      j--;\n      if (j > 0) steps.push({ action: 'compare', i: j - 1, j });\n    }\n  });\n  return {\n    orderedList: list,\n    steps,\n    info: {\n      title: 'Insertion Sort',\n      worstTime: 'O(n^2)',\n      bestTime: 'O(n)',\n      avgTime: 'O(n^2)',\n      space: 'O(n)',\n    },\n  };\n}\n\nexport function SelectionSort(list) {\n  const steps = [];\n  let sortedArrLen = 0;\n  while (sortedArrLen < list.length) {\n    let cur = sortedArrLen;\n    steps.push({ action: 'move cursor', pos: cur });\n    for (let i = sortedArrLen + 1; i < list.length; i++) {\n      steps.push({ action: 'compare', i, j: cur });\n      if (list[i] < list[cur]) {\n        cur = i;\n      }\n    }\n    swap(sortedArrLen, cur, list);\n    steps.push({ action: 'swap', i: sortedArrLen, j: cur });\n    sortedArrLen++;\n  }\n  return {\n    orderedList: list,\n    steps,\n    info: {\n      title: 'Selection Sort',\n      worstTime: 'O(n^2)',\n      bestTime: 'O(n^2)',\n      avgTime: 'O(n^2)',\n      space: 'O(1)',\n    },\n  };\n}\n\nexport default { BubbleSort, InsertionSort, SelectionSort };\n","/* eslint-disable no-param-reassign */\n\nconst defaultColor = '#8BD4D6';\nconst cursorColor = 'black';\nconst compareColor1 = '#ff7961';\nconst compareColor2 = '#f44336';\n\nexport function playAnimation(currentStep, lastCompared, lastSwapped, lastCursorPos, lastRequestID,\n  barRefs, steps, timeOut, speedPercentageRef, setAnimationState) {\n  setAnimationState('playing');\n\n  function displayNextStep() {\n    const step = steps[currentStep.current];\n    switch (step.action) {\n      case 'compare':\n        if (barRefs.current) {\n          if (lastCompared.current.length > 0) { // Reset colors for last compared columns\n            barRefs.current[lastCompared.current[0]].current.style.backgroundColor = defaultColor;\n            barRefs.current[lastCompared.current[1]].current.style.backgroundColor = defaultColor;\n          }\n          // Update colors for currently compared columns\n          barRefs.current[step.i].current.style.backgroundColor = compareColor1;\n          barRefs.current[step.j].current.style.backgroundColor = compareColor2;\n          lastCompared.current = [step.i, step.j];\n        }\n\n        break;\n      case 'swap': {\n        if (barRefs.current) {\n          // Swap heights, colors, and cursor for currently swapped indexes (giving the illusion that the bars being swapped)\n          const iHeight = barRefs.current[step.i].current.style.height;\n          const iColor = barRefs.current[step.i].current.style.backgroundColor;\n          barRefs.current[step.i].current.style.height = barRefs.current[step.j].current.style.height;\n          barRefs.current[step.i].current.innerText = parseInt(barRefs.current[step.i].current.style.height, 10);\n          barRefs.current[step.j].current.style.height = iHeight;\n          barRefs.current[step.j].current.innerText = parseInt(barRefs.current[step.j].current.style.height, 10);\n          barRefs.current[step.i].current.style.backgroundColor = barRefs.current[step.j].current.style.backgroundColor;\n          barRefs.current[step.j].current.style.backgroundColor = iColor;\n          lastSwapped.current = [step.i, step.j];\n        }\n        break;\n      }\n      case 'move cursor':\n        if (barRefs.current) {\n          if (lastCursorPos.current !== null) {\n            barRefs.current[lastCursorPos.current].current.style.borderTop = '0px';\n          }\n          barRefs.current[step.pos].current.style.borderTop = `10px solid ${cursorColor}`;\n          lastCursorPos.current = step.pos;\n\n          if (lastCompared.current.length > 0) { // Reset colors for last compared columns\n            barRefs.current[lastCompared.current[0]].current.style.backgroundColor = defaultColor;\n            barRefs.current[lastCompared.current[1]].current.style.backgroundColor = defaultColor;\n          }\n          if (lastSwapped.current.length > 0) { // Reset colors for last compared columns\n            barRefs.current[lastSwapped.current[0]].current.style.backgroundColor = defaultColor;\n            barRefs.current[lastSwapped.current[1]].current.style.backgroundColor = defaultColor;\n          }\n        }\n        break;\n      default:\n        console.log('default case');\n        break;\n    }\n    currentStep.current += 1;\n    if (currentStep.current < steps.length) {\n      timeOut.current = setTimeout(() => playAnimation(currentStep,\n        lastCompared,\n        lastSwapped,\n        lastCursorPos,\n        lastRequestID,\n        barRefs,\n        steps,\n        timeOut,\n        speedPercentageRef,\n        setAnimationState),\n      -20.19 * speedPercentageRef.current + 2000);\n    } else {\n      setAnimationState('done');\n    }\n  }\n  // Update AnimationFrame RequestID\n  lastRequestID.current = requestAnimationFrame(displayNextStep);\n}\n\n\nexport function pauseAnimation(timeOut, lastRequestID, setAnimationState) {\n  // Stop Animation\n  cancelAnimationFrame(lastRequestID.current);\n  clearTimeout(timeOut.current);\n  setAnimationState('paused');\n}\n\nfunction resetbarRefs(barRefs, list) {\n  list.forEach((num, i) => {\n    barRefs.current[i].current.style.backgroundColor = defaultColor;\n    barRefs.current[i].current.style.height = `${num}vh`;\n    barRefs.current[i].current.style.borderTop = '0px';\n  });\n}\nexport function resetAnimation(currentStep, timeOut, lastRequestID, barRefs, list, setAnimationState) {\n  setAnimationState('init');\n  // Stop Animation\n  cancelAnimationFrame(lastRequestID.current);\n  clearTimeout(timeOut.current);\n  // Reset currentStep and bars\n  currentStep.current = 0;\n  if (barRefs.current.length > 0 && barRefs.current[0].current) resetbarRefs(barRefs, list);\n}\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-plusplus */\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Button, Grid } from 'semantic-ui-react';\nimport './Sorting.scss';\nimport { BubbleSort, InsertionSort, SelectionSort } from './sorting-algorithms';\nimport { playAnimation, pauseAnimation, resetAnimation } from './Animation';\n\n\nclass SortingClassComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [20, 64, 23, 35, 35, 75, 34, 69,\n        76, 57, 9, 67, 33, 58, 7, 27, 22,\n        56, 37, 5, 79, 36, 46, 65],\n      info: '',\n      steps: [],\n      animationState: 'init',\n      speedPercentage: 80,\n    };\n    this.barRefs = React.createRef();\n    this.currentStep = React.createRef();\n    this.lastCompared = React.createRef();\n    this.lastSwapped = React.createRef();\n    this.lastCursorPos = React.createRef();\n    this.lastRequestID = React.createRef();\n    this.timeOut = React.createRef();\n    this.speedPercentageRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { match } = this.props;\n\n    this.barRefs.current = [];\n    this.currentStep.current = 0;\n    this.lastCompared.current = [];\n    this.lastSwapped.current = [];\n    this.lastCursorPos.current = null;\n    this.lastRequestID.current = null;\n    this.timeOut.current = null;\n    this.speedPercentageRef.current = 80;\n\n    const alg = match.params.alg ? match.params.alg : 'bubble-sort';\n    this.getAlgOutput(alg);\n    this.createBarsFromList();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.match.params.alg !== prevProps.match.params.alg) {\n      console.log('Route change!');\n      this.getAlgOutput(this.props.match.params.alg);\n      resetAnimation(this.currentStep, this.timeOut, this.lastRequestID, this.barRefs, this.state.list, this.setAnimationState);\n    }\n  }\n\n  getAlgOutput = (path) => {\n    let algOutput = null;\n\n    switch (path) {\n      case 'bubble-sort':\n        algOutput = BubbleSort(this.state.list.slice());\n        break;\n      case 'insertion-sort':\n        algOutput = InsertionSort(this.state.list.slice());\n        break;\n      case 'selection-sort':\n        algOutput = SelectionSort(this.state.list.slice());\n        break;\n      default:\n        algOutput = BubbleSort(this.state.list.slice());\n        break;\n    }\n    if (algOutput !== null) {\n      this.setState({ steps: algOutput.steps });\n      this.setState({ info: algOutput.info });\n    }\n  }\n\n  createBarsFromList = () => {\n    const { list } = this.state;\n    const localBars = list.map((num, i) => {\n      const ref = React.createRef();\n      const bar = (\n        <span\n          key={i}\n          ref={ref}\n          style={{ height: `${num}vh`, width: `${((100 * (12 / 16)) - 20) / this.state.list.length}vw`, maxWidth: '50px' }}\n          className=\"bar\"\n        >\n          {num}\n        </span>\n      );\n      this.barRefs.current.push(ref);\n      return bar;\n    });\n    this.setState({ bars: localBars });\n  }\n\n  setAnimationState = (animationState) => {\n    this.setState({ animationState });\n  }\n\n  changeSpeed = (e) => {\n    this.speedPercentageRef.current = e.target.value;\n    this.setState({ speedPercentage: e.target.value });\n  }\n\n\n  render() {\n    return (\n      <Grid stackable id=\"container\">\n        <Grid.Row>\n          <Grid.Column width={3}>\n            <h1>{this.state.info.title}</h1>\n            <p>\n              <span>{'Worst Time: '}</span>\n              <span>{this.state.info.worstTime}</span>\n              <br />\n              <span>{'Avg. Time: '}</span>\n              <span>{this.state.info.avgTime}</span>\n              <br />\n              <span>{'Best Time: '}</span>\n              <span>{this.state.info.bestTime}</span>\n              <br />\n              <span>{'Space: '}</span>\n              <span>{this.state.info.space}</span>\n            </p>\n          </Grid.Column>\n          <Grid.Column width={13}>\n            {this.state.animationState === 'playing'\n              ? <Button id=\"pauseBtn\" icon=\"pause\" content=\"Pause\" onClick={() => pauseAnimation(this.timeOut, this.lastRequestID, this.setAnimationState)} />\n              : (\n                <Button\n                  id=\"playBtn\"\n                  disabled={this.state.animationState === 'done'}\n                  icon=\"play\"\n                  content=\"Play\"\n                  onClick={() => {\n                    playAnimation(this.currentStep, this.lastCompared, this.lastSwapped, this.lastCursorPos, this.lastRequestID,\n                      this.barRefs, this.state.steps, this.timeOut, this.speedPercentageRef,\n                      this.setAnimationState);\n                  }}\n                />\n              )}\n            <Button\n              id=\"resetBtn\"\n              icon=\"repeat\"\n              content=\"Reset\"\n              onClick={() => resetAnimation(this.currentStep, this.timeOut, this.lastRequestID, this.barRefs, this.state.list, this.setAnimationState)}\n            />\n            {' Speed: '}\n            <input\n              id=\"speedSlider\"\n              type=\"range\"\n              min={0}\n              max={100}\n              value={this.state.speedPercentage}\n              onChange={this.changeSpeed}\n            />\n            {`${this.state.speedPercentage}%`}\n            <br />\n            <br />\n            {this.state.bars}\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n\nexport default withRouter(SortingClassComponent);\n","import React, { Component } from 'react';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Grid, Sidebar } from 'semantic-ui-react';\nimport Navbar from './components/Navbar';\nimport Pathfinding from './components/Pathfinding';\nimport SortingClassComponent from './components/sorting/SortingClassComponent';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { visible: true };\n  }\n\n  toggleSidebar = () => this.setState((prevState) => ({ visible: !prevState.visible }))\n\n  render() {\n    const { visible } = this.state;\n    return (\n      <Router>\n        <Grid style={{ margin: '0px' }}>\n          <Grid.Column width={16} style={{ minHeight: '100vh', padding: '0px' }}>\n            <Sidebar.Pushable>\n              <Navbar visible={visible} toggleSidebar={this.toggleSidebar} />\n              <Sidebar.Pusher>\n                <Switch>\n                  <Route path=\"/sorting/:alg\">\n                    <SortingClassComponent />\n                  </Route>\n                  <Route path=\"/pathfinding\">\n                    <Pathfinding />\n                  </Route>\n                  <Route path=\"/\">\n                    <SortingClassComponent />\n                  </Route>\n                </Switch>\n              </Sidebar.Pusher>\n            </Sidebar.Pushable>\n          </Grid.Column>\n        </Grid>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}