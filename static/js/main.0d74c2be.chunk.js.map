{"version":3,"sources":["components/Navbar.js","components/sorting/sorting-algorithms.js","components/sorting/Animation.js","components/sorting/Bar.js","components/sorting/SortingClassComponent.js","components/pathfinding/Item.js","components/pathfinding/ToolMenu.js","components/pathfinding/Cell.js","components/pathfinding/Grid2D.js","components/pathfinding/BFS.js","components/pathfinding/Animation.js","components/pathfinding/Pathfinding.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","toggleOpenSidebarBtn","setState","prevState","showOpenSidebarBtn","state","this","toggleSidebar","visible","Nav","exact","to","onClick","className","activeClassName","children","Transition","animation","duration","Button","icon","id","Icon","name","Sidebar","as","Menu","inverted","direction","vertical","width","onHidden","onVisible","style","zIndex","Item","role","tabIndex","float","onKeyUp","Header","Component","swap","a","b","arr","temp","BubbleSort","list","steps","swapped","count","push","action","pos","length","label","i","j","orderedList","info","title","worstTime","bestTime","avgTime","space","pseudoCode","InsertionSort","forEach","el","SelectionSort","sortedArrLen","cur","partition","left","right","pivotIdx","QuickSort","lowerBound","upperBound","Math","floor","index","leftSubArrayIsSmaller","merge","lo","mid","hi","sortedList","value","k","MergeSort","defaultColor","resetAnimation","currentStep","timeOut","lastRequestID","bars","setAnimationState","cancelAnimationFrame","current","clearTimeout","ref","num","backgroundColor","querySelector","height","innerText","display","resetbarRefs","Bar","React","forwardRef","ref2","useRef","maxWidth","SortingClassComponent","getAlgOutput","path","algOutput","slice","createBarsFromList","localBars","map","createRef","key","animationState","changeSpeed","e","speedPercentageRef","target","speedPercentage","generateRandomBars","amount","random","listLength","lastCompared","lastSwapped","lastCursor1Pos","lastCursor2Pos","lastCursor3Pos","match","alg","params","prevProps","console","log","Grid","stackable","Row","Column","content","disabled","playAnimation","requestAnimationFrame","step","iHeight","jHeight","iColor","jColor","parseInt","setTimeout","type","min","max","onChange","margin","withRouter","selectedItem","setSelectedItem","availability","onKeyPress","fontSize","position","top","getItemIcon","ItemTypes","ToolMenu","inventory","find","pause","reset","player","wall","treasure","Cell","visiting","visited","paint","onPath","onMouseDown","onMouseEnter","overflow","updatedGrid","grid","newCell","gridCopy","y","x","Grid2D","setGrid","setInventory","setPlayerPos","setGoalPos","oldType","newType","window","event","which","row","marginBottom","cell","JSON","stringify","BFS","start","goal","visits","Array","from","prevCells","queue","prev","shift","oldI","pauseAnimation","Create2DArray","Pathfinding","useState","initialInventory","empty","Infinity","playerPos","goalPos","animationQueue","padding","undefined","App","minHeight","Pushable","Pusher","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0d74c2be.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { Component } from 'react';\nimport {\n  Menu,\n  Sidebar,\n  Button,\n  Transition,\n  Icon,\n} from 'semantic-ui-react';\nimport { NavLink } from 'react-router-dom';\nimport './Navbar.scss';\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { showOpenSidebarBtn: false };\n  }\n\n  toggleOpenSidebarBtn = () => {\n    this.setState((prevState) => ({ showOpenSidebarBtn: !prevState.showOpenSidebarBtn }));\n  };\n\n  render() {\n    const { showOpenSidebarBtn } = this.state;\n    const { toggleSidebar, visible } = this.props;\n\n    const Nav = (props) => (\n      <NavLink\n        exact\n        to={props.to}\n        onClick={props.onClick}\n        className={props.className}\n        activeClassName=\"active\"\n      >\n        {props.children}\n      </NavLink>\n    );\n\n    return (\n      <>\n        <Transition visible={showOpenSidebarBtn} animation=\"fade right\" duration={700}>\n          <Button\n            icon\n            id=\"openSidebarBtn\"\n            onClick={() => toggleSidebar('push')}\n          >\n            <Icon name=\"bars\" />\n          </Button>\n        </Transition>\n\n        <Sidebar\n          as={Menu}\n          inverted\n          animation=\"push\"\n          direction=\"left\"\n          vertical\n          width=\"thin\"\n          visible={visible}\n          onHidden={this.toggleOpenSidebarBtn}\n          onVisible={this.toggleOpenSidebarBtn}\n          style={{ zIndex: 20 }}\n        >\n          <Menu.Item>\n            TOPICS\n            <span\n              id=\"closeSidebarBtn\"\n              role=\"button\"\n              tabIndex={0}\n              style={{ float: 'right' }}\n              onClick={() => toggleSidebar('push')}\n              onKeyUp={() => toggleSidebar('push')}\n            >\n              X\n            </span>\n          </Menu.Item>\n          <Menu.Item>\n            <Menu.Header>Sorting</Menu.Header>\n            <Menu.Menu>\n              <Menu.Item as={Nav} to=\"/sorting/bubble-sort\" name=\"Bubble Sort\" />\n              <Menu.Item as={Nav} to=\"/sorting/selection-sort\" name=\"Selection Sort\" />\n              <Menu.Item as={Nav} to=\"/sorting/insertion-sort\" name=\"Insertion Sort\" />\n              <Menu.Item as={Nav} to=\"/sorting/quick-sort\" name=\"Quick Sort\" />\n              <Menu.Item as={Nav} to=\"/sorting/merge-sort\" name=\"Merge Sort\" />\n            </Menu.Menu>\n          </Menu.Item>\n\n          <Menu.Item>\n            <Menu.Header>Pathfinding</Menu.Header>\n            <Menu.Menu>\n              <Menu.Item as={Nav} to=\"/pathfinding/BFS\" name=\"BFS\" />\n              {/* <Menu.Item as={Nav} to=\"/pathfinding/a_star\" name=\"A Star\" /> */}\n            </Menu.Menu>\n          </Menu.Item>\n          {/* <Menu.Item>\n            <Menu.Header>Machine Learning</Menu.Header>\n            <Menu.Menu>\n              <Menu.Item as={Nav} to=\"/machinelearning/linear-regression\" name=\"Linear Regression\" />\n            </Menu.Menu>\n          </Menu.Item> */}\n        </Sidebar>\n      </>\n    );\n  }\n}\n\nexport default Navbar;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable no-plusplus */\n\nfunction swap(a, b, arr) {\n  const temp = arr[b];\n  arr[b] = arr[a];\n  arr[a] = temp;\n}\n\nexport function BubbleSort(list) {\n  const steps = [];\n  let swapped = true;\n  let count = 1;\n  steps.push({ action: 'move cursor1', pos: list.length - count, label: 'cur1' });\n  while (swapped) {\n    swapped = false;\n    for (let i = 0; i < list.length - count; i++) {\n      steps.push({ action: 'compare', i, j: i + 1 });\n      if (list[i] > list[i + 1]) {\n        swapped = true;\n        swap(i, i + 1, list);\n        steps.push({ action: 'swap', i, j: i + 1 });\n      }\n    }\n    count += 1;\n    if (list.length - count >= 0) steps.push({ action: 'move cursor1', pos: list.length - count, label: 'cur1' });\n  }\n  return {\n    orderedList: list,\n    steps,\n    info: {\n      title: 'Bubble Sort',\n      worstTime: 'O(n^2)',\n      bestTime: 'O(n)',\n      avgTime: 'O(n^2)',\n      space: 'O(n)',\n      pseudoCode: `function BubbleSort(list) {\n  swapped = true;\n  count = 1;\n  while (swapped) {\n    swapped = false;\n    for (let i = 0; i < list.length - count; i++) {\n      if (list[i] > list[i + 1]) {\n        swapped = true;\n        swap(i, i + 1, list);\n      }\n    }\n    count += 1;\n  }\n  return list;\n}`,\n    },\n  };\n}\n\nexport function InsertionSort(list) {\n  const steps = [];\n  list.forEach((el, i) => {\n    let j = i;\n    steps.push({ action: 'move cursor1', pos: i, label: 'cur1' });\n    if (j > 0) steps.push({ action: 'compare', i: j - 1, j });\n    while (j > 0 && list[j - 1] > list[j]) {\n      swap(j - 1, j, list);\n      steps.push({ action: 'swap', i: j - 1, j });\n      j--;\n      if (j > 0) steps.push({ action: 'compare', i: j - 1, j });\n    }\n  });\n  return {\n    orderedList: list,\n    steps,\n    info: {\n      title: 'Insertion Sort',\n      worstTime: 'O(n^2)',\n      bestTime: 'O(n)',\n      avgTime: 'O(n^2)',\n      space: 'O(n)',\n      pseudoCode: `function InsertionSort(list) {\n  const steps = [];\n  list.forEach((el, i) => {\n    let j = i;\n    while (j > 0 && list[j - 1] > list[j]) {\n      swap(j - 1, j, list);\n      j--;\n    }\n  });\n  return list;\n}`,\n    },\n  };\n}\n\nexport function SelectionSort(list) {\n  const steps = [];\n  let sortedArrLen = 0;\n  while (sortedArrLen < list.length) {\n    let cur = sortedArrLen;\n    steps.push({ action: 'move cursor1', pos: cur, label: 'cur1' });\n    for (let i = sortedArrLen + 1; i < list.length; i++) {\n      steps.push({ action: 'compare', i, j: cur });\n      if (list[i] < list[cur]) {\n        cur = i;\n      }\n    }\n    swap(sortedArrLen, cur, list);\n    steps.push({ action: 'swap', i: sortedArrLen, j: cur });\n    sortedArrLen++;\n  }\n  return {\n    orderedList: list,\n    steps,\n    info: {\n      title: 'Selection Sort',\n      worstTime: 'O(n^2)',\n      bestTime: 'O(n^2)',\n      avgTime: 'O(n^2)',\n      space: 'O(1)',\n      pseudoCode: `function SelectionSort(list) {\n  const steps = [];\n  let sortedArrLen = 0;\n  while (sortedArrLen < list.length) {\n    let cur = sortedArrLen;\n    steps.push({ action: 'move cursor1', pos: cur, label: 'cur1' });\n    for (let i = sortedArrLen + 1; i < list.length; i++) {\n      steps.push({ action: 'compare', i, j: cur });\n      if (list[i] < list[cur]) {\n        cur = i;\n      }\n    }\n    swap(sortedArrLen, cur, list);\n    steps.push({ action: 'swap', i: sortedArrLen, j: cur });\n    sortedArrLen++;\n  }\n  return list;\n}`,\n    },\n  };\n}\n\nfunction partition(list, left, right, pivotIdx, steps) {\n  steps.push({ action: 'move cursor2', pos: left, label: 'low' });\n  steps.push({ action: 'move cursor3', pos: right, label: 'high' });\n  while (left <= right) {\n    steps.push({ action: 'compare', i: left, j: pivotIdx });\n    while (list[left] < list[pivotIdx]) {\n      steps.push({ action: 'compare', i: left, j: pivotIdx });\n      left++;\n      steps.push({ action: 'move cursor2', pos: left, label: 'low' });\n    }\n\n    steps.push({ action: 'compare', i: right, j: pivotIdx });\n    while (list[pivotIdx] < list[right]) {\n      steps.push({ action: 'compare', i: right, j: pivotIdx });\n      right--;\n      steps.push({ action: 'move cursor3', pos: right, label: 'high' });\n    }\n\n    steps.push({ action: 'compare', i: left, j: right });\n    if (left <= right) {\n      swap(left, right, list);\n      steps.push({ action: 'swap', i: left, j: right });\n\n      if (pivotIdx === left) {\n        pivotIdx = right;\n        steps.push({ action: 'move cursor1', pos: pivotIdx, label: 'pivot' });\n      } else if (pivotIdx === right) {\n        pivotIdx = left;\n        steps.push({ action: 'move cursor1', pos: pivotIdx, label: 'pivot' });\n      }\n\n      left++;\n      steps.push({ action: 'move cursor2', pos: left, label: 'low' });\n\n      right--;\n      steps.push({ action: 'move cursor3', pos: right, label: 'high' });\n    }\n  }\n  return left;\n}\nexport function QuickSort(list, lowerBound = 0, upperBound = list.length - 1, steps = []) {\n  if (lowerBound >= upperBound) {\n    return {\n      orderedList: list,\n      steps,\n    };\n  }\n  const pivotIdx = Math.floor((lowerBound + upperBound) / 2);\n  steps.push({ action: 'move cursor1', pos: pivotIdx, label: 'pivot' });\n  const index = partition(list, lowerBound, upperBound, pivotIdx, steps);\n\n  // Run recursively on the smallest sub-array to optimize space complexity\n  const leftSubArrayIsSmaller = (index - 1) - lowerBound < upperBound - index;\n  if (leftSubArrayIsSmaller) {\n    QuickSort(list, lowerBound, index - 1, steps);\n    QuickSort(list, index, upperBound, steps);\n  } else {\n    QuickSort(list, index, upperBound, steps);\n    QuickSort(list, lowerBound, index - 1, steps);\n  }\n  return {\n    orderedList: list,\n    steps,\n    info: {\n      title: 'Quick Sort',\n      worstTime: 'O(n^2)',\n      bestTime: 'O(n * log(n))',\n      avgTime: 'O(n * log(n))',\n      space: 'O(log(n))',\n      pseudoCode: `function QuickSort(list, lowerBound = 0, upperBound = list.length - 1,) {\n  if (lowerBound >= upperBound) {\n    return list;\n  }\n  const pivotIdx = Math.floor((lowerBound + upperBound) / 2);\n  const index = partition(list, lowerBound, upperBound, pivotIdx);\n\n  // Run recursively on the smallest sub-array to optimize space complexity\n  const leftSubArrayIsSmaller = (index - 1) - lowerBound < upperBound - index;\n  if (leftSubArrayIsSmaller) {\n    QuickSort(list, lowerBound, index - 1, steps);\n    QuickSort(list, index, upperBound, steps);\n  } else {\n    QuickSort(list, index, upperBound, steps);\n    QuickSort(list, lowerBound, index - 1, steps);\n  }\n  return list;\n}\n      \nfunction partition(list, left, right, pivotIdx) {\n  while (left <= right) {\n    while (list[left] < list[pivotIdx]) {\n      left++;\n    }\n\n    while (list[pivotIdx] < list[right]) {\n      right--;\n    }\n\n    if (left <= right) {\n      swap(left, right, list);\n      if (pivotIdx === left) {\n        pivotIdx = right;\n      } else if (pivotIdx === right) {\n        pivotIdx = left;\n      }\n      left++;\n      right--;\n    }\n  }\n  return left;\n}`,\n    },\n  };\n}\n\n// Merge Sort\nfunction merge(list, lo, mid, hi, steps) {\n  const sortedList = [];\n  let i = lo;\n  let j = mid + 1;\n  while (i <= mid && j <= hi) {\n    steps.push({ action: 'move cursor1', pos: i, label: 'left' });\n    steps.push({ action: 'move cursor2', pos: j, label: 'right' });\n    steps.push({ action: 'compare', i, j });\n\n    if (list[i] <= list[j]) {\n      steps.push({ action: 'move cursor3', pos: lo + sortedList.length, label: 'sort' });\n      sortedList.push(list[i]);\n      steps.push({ action: 'replace', pos: lo + sortedList.length - 1, value: list[i] });\n      i++;\n    } else {\n      steps.push({ action: 'move cursor3', pos: lo + sortedList.length, label: 'sort' });\n      sortedList.push(list[j]);\n      steps.push({ action: 'replace', pos: lo + sortedList.length - 1, value: list[j] });\n      j++;\n    }\n  }\n  while (i <= mid) {\n    steps.push({ action: 'move cursor1', pos: i, label: 'left' });\n    steps.push({ action: 'compare', i, j: i });\n    steps.push({ action: 'move cursor3', pos: lo + sortedList.length, label: 'sort' });\n    sortedList.push(list[i]);\n    steps.push({ action: 'replace', pos: lo + sortedList.length - 1, value: list[i] });\n    i++;\n  }\n  while (j <= hi) {\n    steps.push({ action: 'move cursor2', pos: j, label: 'right' });\n    steps.push({ action: 'compare', i: j, j });\n    steps.push({ action: 'move cursor3', pos: lo + sortedList.length, label: 'sort' });\n    sortedList.push(list[j]);\n    steps.push({ action: 'replace', pos: lo + sortedList.length - 1, value: list[j] });\n    j++;\n  }\n  for (let k = lo; k <= hi; k++) {\n    list[k] = sortedList[k - lo];\n  }\n}\nexport function MergeSort(list, lo = 0, hi = list.length - 1, steps = []) {\n  if (lo >= hi) {\n    return {\n      orderedList: list,\n      steps,\n    };\n  }\n  const mid = Math.floor((lo + hi) / 2);\n  MergeSort(list, lo, mid, steps);\n  MergeSort(list, mid + 1, hi, steps);\n  merge(list, lo, mid, hi, steps);\n\n  return {\n    orderedList: list,\n    steps,\n    info: {\n      title: 'Merge Sort',\n      worstTime: 'O(n * log(n))',\n      bestTime: 'O(n * log(n))',\n      avgTime: 'O(n * log(n))',\n      space: 'O(n)',\n      pseudoCode: `function MergeSort(list, lo = 0, hi = list.length - 1) {\n  if (lo >= hi) {\n    return list;\n  }\n  const mid = Math.floor((lo + hi) / 2);\n  MergeSort(list, lo, mid);\n  MergeSort(list, mid + 1, hi);\n  merge(list, lo, mid, hi);\n\n  return list;\n}\n\nfunction merge(list, lo, mid, hi) {\n  const sortedList = [];\n  let i = lo;\n  let j = mid + 1;\n  while (i <= mid && j <= hi) {\n    if (list[i] <= list[j]) {\n      sortedList.push(list[i]);\n      i++;\n    } else {\n      sortedList.push(list[j]);\n      j++;\n    }\n  }\n  while (i <= mid) {\n    sortedList.push(list[i]);\n    i++;\n  }\n  while (j <= hi) {\n    sortedList.push(list[j]);\n    j++;\n  }\n  for (let k = lo; k <= hi; k++) {\n    list[k] = sortedList[k - lo];\n  }\n}`,\n    },\n  };\n}\n\nexport default {\n  BubbleSort, InsertionSort, SelectionSort, QuickSort, MergeSort,\n};\n","/* eslint-disable no-param-reassign */\n\nconst defaultColor = 'rgb(116, 172, 255)';\nconst compareColor1 = '#ff7961';\nconst compareColor2 = '#f44336';\n\nexport function playAnimation(currentStep, lastCompared, lastSwapped, lastCursor1Pos, lastCursor2Pos, lastCursor3Pos, lastRequestID,\n  bars, steps, timeOut, speedPercentageRef, setAnimationState) {\n  setAnimationState('playing');\n\n  function displayNextStep() {\n    const step = steps[currentStep.current];\n\n    switch (step.action) {\n      case 'compare':\n        if (bars) {\n          if (lastCompared.current.length > 0) { // Reset colors for last compared columns\n            bars[lastCompared.current[0]].ref.current.style.backgroundColor = defaultColor;\n            bars[lastCompared.current[1]].ref.current.style.backgroundColor = defaultColor;\n          }\n          // Update colors for currently compared columns\n          bars[step.i].ref.current.style.backgroundColor = compareColor1;\n          bars[step.j].ref.current.style.backgroundColor = compareColor2;\n\n          lastCompared.current = [step.i, step.j];\n        }\n\n        break;\n      case 'swap': {\n        if (bars) {\n          // Swap heights, colors, and cursor for currently swapped indexes (giving the illusion that the bars being swapped)\n          const iHeight = bars[step.i].ref.current.querySelector('.bar').style.height;\n          const jHeight = bars[step.j].ref.current.querySelector('.bar').style.height;\n\n          const iColor = bars[step.i].ref.current.style.backgroundColor;\n          const jColor = bars[step.j].ref.current.style.backgroundColor;\n          // Swap values\n          bars[step.i].ref.current.querySelector('.barValue').innerText = parseInt(jHeight, 10);\n          bars[step.j].ref.current.querySelector('.barValue').innerText = parseInt(iHeight, 10);\n          // Swap Heights\n          bars[step.i].ref.current.querySelector('.bar').style.height = jHeight;\n          bars[step.j].ref.current.querySelector('.bar').style.height = iHeight;\n          // Swap colors\n          bars[step.i].ref.current.style.backgroundColor = jColor;\n          bars[step.j].ref.current.style.backgroundColor = iColor;\n          lastSwapped.current = [step.i, step.j];\n        }\n        break;\n      }\n      case 'move cursor1':\n        if (bars) {\n          if (lastCursor1Pos.current !== null) {\n            bars[lastCursor1Pos.current].ref.current.querySelector('.cursor1').style.display = 'none';\n          }\n\n          if (step.pos >= bars.length) {\n            lastCursor1Pos.current = null;\n          } else {\n            bars[step.pos].ref.current.querySelector('.cursor1').style.display = 'block';\n            if (step.label) bars[step.pos].ref.current.querySelector('.cursor1').innerText = step.label;\n            lastCursor1Pos.current = step.pos;\n          }\n\n          if (lastCompared.current.length > 0) { // Reset colors for last compared columns\n            bars[lastCompared.current[0]].ref.current.style.backgroundColor = defaultColor;\n            bars[lastCompared.current[1]].ref.current.style.backgroundColor = defaultColor;\n          }\n          if (lastSwapped.current.length > 0) { // Reset colors for last swapped columns\n            bars[lastSwapped.current[0]].ref.current.style.backgroundColor = defaultColor;\n            bars[lastSwapped.current[1]].ref.current.style.backgroundColor = defaultColor;\n          }\n        }\n        break;\n      case 'move cursor2':\n        if (bars) {\n          if (lastCursor2Pos.current !== null) {\n            bars[lastCursor2Pos.current].ref.current.querySelector('.cursor2').style.display = 'none';\n          }\n\n          if (step.pos >= bars.length) {\n            lastCursor2Pos.current = null;\n          } else {\n            bars[step.pos].ref.current.querySelector('.cursor2').style.display = 'block';\n            if (step.label) bars[step.pos].ref.current.querySelector('.cursor2').innerText = step.label;\n            lastCursor2Pos.current = step.pos;\n          }\n\n          if (lastCompared.current.length > 0) { // Reset colors for last compared columns\n            bars[lastCompared.current[0]].ref.current.style.backgroundColor = defaultColor;\n            bars[lastCompared.current[1]].ref.current.style.backgroundColor = defaultColor;\n          }\n          if (lastSwapped.current.length > 0) { // Reset colors for last swapped columns\n            bars[lastSwapped.current[0]].ref.current.style.backgroundColor = defaultColor;\n            bars[lastSwapped.current[1]].ref.current.style.backgroundColor = defaultColor;\n          }\n        }\n        break;\n      case 'move cursor3':\n        if (bars) {\n          if (lastCursor3Pos.current !== null) {\n            bars[lastCursor3Pos.current].ref.current.querySelector('.cursor3').style.display = 'none';\n          }\n\n          if (step.pos >= bars.length) {\n            lastCursor3Pos.current = null;\n          } else {\n            bars[step.pos].ref.current.querySelector('.cursor3').style.display = 'block';\n            if (step.label) bars[step.pos].ref.current.querySelector('.cursor3').innerText = step.label;\n            lastCursor3Pos.current = step.pos;\n          }\n\n          if (lastCompared.current.length > 0) { // Reset colors for last compared columns\n            bars[lastCompared.current[0]].ref.current.style.backgroundColor = defaultColor;\n            bars[lastCompared.current[1]].ref.current.style.backgroundColor = defaultColor;\n          }\n          if (lastSwapped.current.length > 0) { // Reset colors for last swapped columns\n            bars[lastSwapped.current[0]].ref.current.style.backgroundColor = defaultColor;\n            bars[lastSwapped.current[1]].ref.current.style.backgroundColor = defaultColor;\n          }\n        }\n        break;\n      case 'replace':\n        if (bars) {\n          bars[step.pos].ref.current.querySelector('.barValue').innerText = parseInt(step.value, 10);\n          bars[step.pos].ref.current.querySelector('.bar').style.height = `${step.value}vh`;\n        }\n        break;\n      default:\n        console.log('default case');\n        break;\n    }\n    currentStep.current += 1;\n    if (currentStep.current < steps.length) {\n      timeOut.current = setTimeout(() => playAnimation(currentStep,\n        lastCompared,\n        lastSwapped,\n        lastCursor1Pos,\n        lastCursor2Pos,\n        lastCursor3Pos,\n        lastRequestID,\n        bars,\n        steps,\n        timeOut,\n        speedPercentageRef,\n        setAnimationState),\n      -20 * speedPercentageRef.current + 2000);\n    } else {\n      setAnimationState('done');\n    }\n  }\n  // Update AnimationFrame RequestID\n  lastRequestID.current = requestAnimationFrame(displayNextStep);\n}\n\n\nexport function pauseAnimation(timeOut, lastRequestID, setAnimationState) {\n  // Stop Animation\n  cancelAnimationFrame(lastRequestID.current);\n  clearTimeout(timeOut.current);\n  setAnimationState('paused');\n}\n\nfunction resetbarRefs(bars, list) {\n  list.forEach((num, i) => {\n    bars[i].ref.current.style.backgroundColor = defaultColor;\n    bars[i].ref.current.querySelector('.bar').style.height = `${num}vh`;\n    bars[i].ref.current.querySelector('.barValue').innerText = `${num}`;\n    bars[i].ref.current.querySelector('.cursor1').style.display = 'none';\n    bars[i].ref.current.querySelector('.cursor2').style.display = 'none';\n    bars[i].ref.current.querySelector('.cursor3').style.display = 'none';\n  });\n}\nexport function resetAnimation(currentStep, timeOut, lastRequestID, bars, list, setAnimationState) {\n  setAnimationState('init');\n  // Stop Animation\n  cancelAnimationFrame(lastRequestID.current);\n  clearTimeout(timeOut.current);\n  // Reset currentStep and bars\n  currentStep.current = 0;\n  if (bars.length > 0 && bars[0].ref.current) resetbarRefs(bars, list);\n}\n","import React, { useRef } from 'react';\n\nconst Bar = React.forwardRef((props, ref) => {\n  const { num, height } = props;\n  const ref2 = useRef(null);\n\n  return (\n    <div\n      ref={ref}\n      className=\"barContainer\"\n      style={{ width: `${height}vw`, maxWidth: '50px' }}\n    >\n      <div className=\"cursor1\">cur 1</div>\n      <div className=\"cursor2\">cur 2</div>\n      <div className=\"cursor3\">cur 3</div>\n      <div className=\"barValue\">{num}</div>\n      <div\n        ref={ref2}\n        style={{ height: `${num}vh` }}\n        className=\"bar\"\n      />\n    </div>\n  );\n});\nexport default Bar;\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-plusplus */\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Button, Grid } from 'semantic-ui-react';\nimport './Sorting.scss';\nimport {\n  BubbleSort, SelectionSort, InsertionSort, QuickSort, MergeSort,\n} from './sorting-algorithms';\nimport { playAnimation, pauseAnimation, resetAnimation } from './Animation';\nimport Bar from './Bar';\n\n\nclass SortingClassComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [20, 64, 23, 35, 35, 75, 34, 69,\n        76, 57, 9, 67, 33, 58, 7, 27, 22,\n        56, 37, 5, 79, 36, 46, 65],\n      info: '',\n      steps: [],\n      animationState: 'init',\n      speedPercentage: 100,\n      listLength: 24,\n    };\n    this.currentStep = React.createRef();\n    this.lastCompared = React.createRef();\n    this.lastSwapped = React.createRef();\n    this.lastCursor1Pos = React.createRef();\n    this.lastCursor2Pos = React.createRef();\n    this.lastCursor3Pos = React.createRef();\n    this.lastRequestID = React.createRef();\n    this.timeOut = React.createRef();\n    this.speedPercentageRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { match } = this.props;\n\n    this.currentStep.current = 0;\n    this.lastCompared.current = [];\n    this.lastSwapped.current = [];\n    this.lastCursor1Pos.current = null;\n    this.lastCursor2Pos.current = null;\n    this.lastCursor3Pos.current = null;\n    this.lastRequestID.current = null;\n    this.timeOut.current = null;\n    this.speedPercentageRef.current = 100;\n\n    const alg = !match.params || !match.params.alg ? 'bubble-sort' : match.params.alg; // Default to bubble-sort\n    this.getAlgOutput(alg);\n    this.createBarsFromList();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { match } = this.props;\n    const alg = !match.params || !match.params.alg ? 'bubble-sort' : match.params.alg; // Default to bubble-sort\n    if (match.params && match.params.alg !== prevProps.match.params.alg) {\n      console.log('Route change!');\n      this.getAlgOutput(alg);\n      resetAnimation(this.currentStep, this.timeOut, this.lastRequestID, this.state.bars, this.state.list, this.setAnimationState);\n    }\n    if (this.state.list !== prevState.list) {\n      this.getAlgOutput(alg);\n      this.createBarsFromList();\n    }\n  }\n\n  getAlgOutput = (path) => {\n    let algOutput = null;\n\n    switch (path) {\n      case 'bubble-sort':\n        algOutput = BubbleSort(this.state.list.slice());\n        break;\n      case 'selection-sort':\n        algOutput = SelectionSort(this.state.list.slice());\n        break;\n      case 'insertion-sort':\n        algOutput = InsertionSort(this.state.list.slice());\n        break;\n      case 'quick-sort':\n        algOutput = QuickSort(this.state.list.slice());\n        break;\n      case 'merge-sort':\n        algOutput = MergeSort(this.state.list.slice());\n        break;\n      default:\n        algOutput = BubbleSort(this.state.list.slice());\n        break;\n    }\n    if (algOutput !== null) {\n      this.setState({ steps: algOutput.steps });\n      this.setState({ info: algOutput.info });\n    }\n  }\n\n  createBarsFromList = () => {\n    const { list } = this.state;\n    const localBars = list.map((num, i) => {\n      const ref = React.createRef();\n      const bar = <Bar key={i} ref={ref} num={num} height={((100 * (12 / 16)) - 20) / this.state.list.length} />;\n      return bar;\n    });\n    this.setState({ bars: localBars });\n  }\n\n  setAnimationState = (animationState) => {\n    this.setState({ animationState });\n  }\n\n  changeSpeed = (e) => {\n    this.speedPercentageRef.current = e.target.value;\n    this.setState({ speedPercentage: e.target.value });\n  }\n\n  generateRandomBars = (amount) => {\n    const list = [];\n    for (let i = 0; i < amount; i++) {\n      // Get random number between 80 and 5\n      const num = Math.floor(Math.random() * (80 - 3 + 1)) + 3;\n      list.push(num);\n    }\n    this.setState({ list });\n  }\n\n  render() {\n    return (\n      <Grid stackable id=\"container\">\n        <Grid.Row>\n          <Grid.Column width={4}>\n            <h1>{this.state.info.title}</h1>\n            <p>\n              <span>{'Worst Time: '}</span>\n              <span>{this.state.info.worstTime}</span>\n              <br />\n              <span>{'Avg. Time: '}</span>\n              <span>{this.state.info.avgTime}</span>\n              <br />\n              <span>{'Best Time: '}</span>\n              <span>{this.state.info.bestTime}</span>\n              <br />\n              <span>{'Space: '}</span>\n              <span>{this.state.info.space}</span>\n            </p>\n            <pre>\n              {this.state.info.pseudoCode}\n            </pre>\n          </Grid.Column>\n          <Grid.Column width={12}>\n            {this.state.animationState === 'playing'\n              ? <Button id=\"pauseBtn\" icon=\"pause\" content=\"Pause\" onClick={() => pauseAnimation(this.timeOut, this.lastRequestID, this.setAnimationState)} />\n              : (\n                <Button\n                  id=\"playBtn\"\n                  disabled={this.state.animationState === 'done'}\n                  icon=\"play\"\n                  content=\"Play\"\n                  onClick={() => {\n                    playAnimation(this.currentStep, this.lastCompared, this.lastSwapped, this.lastCursor1Pos, this.lastCursor2Pos, this.lastCursor3Pos, this.lastRequestID,\n                      this.state.bars, this.state.steps, this.timeOut, this.speedPercentageRef,\n                      this.setAnimationState);\n                  }}\n                />\n              )}\n            <Button\n              id=\"resetBtn\"\n              icon=\"repeat\"\n              content=\"Reset\"\n              onClick={() => resetAnimation(this.currentStep, this.timeOut, this.lastRequestID, this.state.bars, this.state.list, this.setAnimationState)}\n            />\n            {' Speed: '}\n            <input\n              id=\"speedSlider\"\n              type=\"range\"\n              min={0}\n              max={100}\n              value={this.state.speedPercentage}\n              onChange={this.changeSpeed}\n            />\n            {` ${this.state.speedPercentage}%`}\n            <br />\n            {' Number of Values: '}\n            <input\n              id=\"listLengthSlider\"\n              type=\"range\"\n              min={3}\n              max={50}\n              value={this.state.listLength}\n              onChange={(e) => {\n                resetAnimation(this.currentStep, this.timeOut, this.lastRequestID, this.state.bars, this.state.list, this.setAnimationState);\n                this.setState({ listLength: e.target.value });\n                this.generateRandomBars(e.target.value);\n              }}\n            />\n            {` ${this.state.listLength}`}\n            <Button\n              id=\"newRandomSet\"\n              icon=\"random\"\n              content=\"New Random Set\"\n              onClick={() => {\n                resetAnimation(this.currentStep, this.timeOut, this.lastRequestID, this.state.bars, this.state.list, this.setAnimationState);\n                this.generateRandomBars(this.state.listLength);\n              }}\n              style={{ margin: '0px 10px' }}\n            />\n            <br />\n            <br />\n            {this.state.bars}\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n\nexport default withRouter(SortingClassComponent);\n","import React from 'react';\nimport { Icon } from 'semantic-ui-react';\nimport './Item.scss';\n\nfunction getItemIcon(type, availability) {\n  switch (type) {\n    case 'player':\n      return (\n        <Icon\n          className={`street view ${availability ? 'inverted blue' : 'inverted grey'}`}\n          style={{\n            fontSize: '35px', position: 'relative', top: '0px', left: '-1px',\n          }}\n        />\n      );\n    case 'wall':\n      return (\n        <Icon\n          className={`square full ${availability ? 'grey' : 'inverted grey'}`}\n          style={{\n            fontSize: '30px', position: 'relative', top: '-1px', left: '0px',\n          }}\n        />\n      );\n    case 'treasure':\n      return (\n        <Icon\n          className={`home ${availability ? 'inverted green' : 'inverted grey'}`}\n          style={{\n            fontSize: '35px', position: 'relative', top: '0px', left: '-1px',\n          }}\n        />\n      );\n    case 'empty':\n      return (\n        <Icon\n          className=\"eraser inverted red\"\n          style={{\n            fontSize: '35px', position: 'relative', top: '0px', left: '-1px',\n          }}\n        />\n      );\n    default: return null;\n  }\n}\nfunction Item({\n  type, selectedItem, setSelectedItem, availability,\n}) {\n  return (\n    <span\n      className={`item ${selectedItem === type ? 'selected' : ''}`}\n      role=\"button\"\n      onClick={() => {\n        setSelectedItem(type);\n      }}\n      tabIndex={0}\n      onKeyPress={() => setSelectedItem(type)}\n    >\n      {getItemIcon(type, availability)}\n      {type === 'empty' ? 'Eraser' : `${type} x${availability}`}\n    </span>\n  );\n}\n\nexport default Item;\n","import React from 'react';\nimport { Button } from 'semantic-ui-react';\nimport Item from './Item';\n\nexport const ItemTypes = {\n  PLAYER: 'player',\n  WALL: 'wall',\n  TREASURE: 'treasure',\n  ERASER: 'empty',\n};\n\nfunction ToolMenu({\n  selectedItem, setSelectedItem, inventory, find, pause, reset, animationState,\n}) {\n  return (\n    <div id=\"pathfinding_items\">\n      <Item type={ItemTypes.PLAYER} selectedItem={selectedItem} setSelectedItem={setSelectedItem} availability={inventory.player} />\n      <Item type={ItemTypes.WALL} selectedItem={selectedItem} setSelectedItem={setSelectedItem} availability={inventory.wall} />\n      <Item type={ItemTypes.TREASURE} selectedItem={selectedItem} setSelectedItem={setSelectedItem} availability={inventory.treasure} />\n      <Item type={ItemTypes.ERASER} selectedItem={selectedItem} setSelectedItem={setSelectedItem} />\n      {animationState === 'playing'\n        ? <Button id=\"pauseBtn\" icon=\"pause\" content=\"Pause\" onClick={() => pause()} />\n        : (\n          <Button\n            id=\"playBtn\"\n            disabled={animationState === 'done' || inventory.player + inventory.treasure > 0}\n            icon=\"play\"\n            content=\"Play\"\n            onClick={() => find()}\n          />\n        )}\n      <Button\n        id=\"resetBtn\"\n        icon=\"repeat\"\n        content=\"Reset\"\n        onClick={() => reset()}\n      />\n    </div>\n  );\n}\n\nexport default ToolMenu;\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React from 'react';\nimport { Icon } from 'semantic-ui-react';\nimport './Cell.scss';\n\n\nfunction Cell({\n  type, visiting, visited, pos, paint, onPath,\n}) {\n  return (\n    <div\n      role=\"button\"\n      className={`${type} cell ${visited ? 'visited' : ''} ${visiting ? 'visiting' : ''} ${onPath ? 'path' : ''}`}\n      onMouseDown={() => paint(pos, type)}\n      onMouseEnter={() => paint(pos, type)}\n      tabIndex={0}\n      onKeyPress={() => paint(pos, type)}\n      style={{ overflow: 'show' }}\n    >\n      {type === 'player'\n        ? (\n          <Icon\n            className=\"street view inverted blue\"\n            style={{\n              fontSize: '35px', position: 'relative', top: '0px', left: '-1px',\n            }}\n          />\n        )\n        : ''}\n      {type === 'treasure'\n        ? (\n          <Icon\n            className=\"home inverted green\"\n            style={{\n              fontSize: '40px', position: 'relative', top: '-5px', left: '-5px',\n            }}\n          />\n        )\n        : ''}\n\n    </div>\n  );\n}\n\nexport default Cell;\n","/* eslint-disable no-plusplus */\nimport React from 'react';\nimport Cell from './Cell';\n\nfunction updatedGrid(grid, pos, newCell) {\n  const gridCopy = [...grid];\n  gridCopy[pos.y][pos.x] = { ...gridCopy[pos.y][pos.x], ...newCell };\n  return gridCopy;\n}\n\nfunction Grid2D({\n  width, selectedItem, inventory, setGrid, setInventory, setPlayerPos, setGoalPos, grid,\n}) {\n  const availability = inventory[selectedItem]; // Number of available items of the selected type\n\n  function paint(pos, oldType) {\n    const newType = selectedItem;\n    if (window.event.which === 1 && availability > 0) {\n      if (newType === 'empty' && oldType !== 'empty') { // Erasing something\n        setGrid(updatedGrid(grid, pos, { type: newType }));\n        setInventory((prevState) => ({ ...prevState, [oldType]: prevState[oldType] + 1 }));\n      } else if (newType !== 'empty' && newType !== oldType) { // Painting something\n        setGrid(updatedGrid(grid, pos, { type: newType }));\n        setInventory((prevState) => ({ ...prevState, [newType]: availability - 1, [oldType]: prevState[oldType] + 1 }));\n        if (newType === 'player') {\n          setPlayerPos(pos);\n        } else if (newType === 'treasure') {\n          setGoalPos(pos);\n        }\n      }\n    }\n  }\n\n  return (\n    <div id=\"GridContainer\" style={{ width: `${width * 40 + 10}px` }}>\n      {grid.map((row, i) => (\n        <div key={i} style={{ marginBottom: '-4px' }}>\n          {row.map((cell) => (\n            <Cell\n              key={JSON.stringify(cell.pos)}\n              type={cell.type}\n              visited={cell.visited}\n              visiting={cell.visiting}\n              onPath={cell.onPath}\n              pos={cell.pos}\n              paint={paint}\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Grid2D;\n","\nfunction BFS(start, grid, goal) {\n  const visits = [];\n  const path = [];\n  const visited = Array.from(Array(grid.length), () => Array(grid[0].length)); // Initialize empty array\n  const prevCells = Array.from(Array(grid.length), () => Array(grid[0].length)); // Initialize empty array\n\n  const queue = [{ pos: start, prev: { y: null, x: null } }];\n  while (queue.length > 0) {\n    const { pos, prev } = queue.shift(); // Dequeues first element of array\n    const { x, y } = pos;\n\n    if (y < 0 || x < 0 || y >= grid.length || x >= grid[0].length || visited[y][x] || grid[y][x].type === 'wall') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n\n    // eslint-disable-next-line no-param-reassign\n    visited[y][x] = true;\n    prevCells[y][x] = { y: prev.y, x: prev.x };\n    visits.push({ y, x });\n\n    if (y === goal.y && x === goal.x) {\n      let i = y;\n      let j = x;\n      path.push({ y, x });\n      while (i !== start.y || j !== start.x) {\n        path.push({ y: i, x: j });\n        const oldI = i;\n        i = prevCells[i][j].y;\n        j = prevCells[oldI][j].x;\n      }\n\n\n      console.log(`found at y:${y}, x:${x}`);\n      return { visits, path };\n    }\n\n    queue.push({ pos: { y, x: x + 1 }, prev: { y, x } }); // go right\n    queue.push({ pos: { y, x: x - 1 }, prev: { y, x } }); // go left\n    queue.push({ pos: { y: y + 1, x }, prev: { y, x } }); // go down\n    queue.push({ pos: { y: y - 1, x }, prev: { y, x } }); // go up\n  }\n  return { visits, path }; // In case no path is found\n}\n\nexport default BFS;\n","/* eslint-disable no-param-reassign */\n\nfunction updatedGrid(grid, pos, newCell) {\n  const gridCopy = [...grid];\n  gridCopy[pos.y][pos.x] = { ...gridCopy[pos.y][pos.x], ...newCell };\n  return gridCopy;\n}\n\nexport function playAnimation(grid, setGrid, animationQueue, currentStep, lastRequestID, timeOut, speedPercentageRef, setAnimationState) {\n  setAnimationState('playing');\n\n  function displayNextStep() {\n    const { steps, type } = animationQueue.current[0];\n    const { x, y } = steps[currentStep.current];\n\n    if (grid[y][x] !== undefined) {\n      if (type === 'path') setGrid(updatedGrid(grid, { y, x }, { visited: true, onPath: true }));\n      else if (type === 'visits') {\n        if (currentStep.current > 0) {\n          setGrid(updatedGrid(grid, { y: steps[currentStep.current - 1].y, x: steps[currentStep.current - 1].x }, { visited: true, visiting: false }));\n        }\n        setGrid(updatedGrid(grid, { y, x }, { visited: false, visiting: true }));\n      }\n    }\n\n    currentStep.current += 1;\n    if (currentStep.current < steps.length) {\n      timeOut.current = setTimeout(() => playAnimation(grid,\n        setGrid,\n        animationQueue,\n        currentStep,\n        lastRequestID,\n        timeOut,\n        speedPercentageRef,\n        setAnimationState),\n      -20 * speedPercentageRef + 2000);\n    } else {\n      currentStep.current = 0;\n      if (animationQueue.current.length > 1) {\n        animationQueue.current.shift();\n        currentStep.current = 0;\n        playAnimation(grid, setGrid, animationQueue, currentStep, lastRequestID, timeOut, speedPercentageRef, setAnimationState);\n      } else setAnimationState('done');\n    }\n  }\n  // Update AnimationFrame RequestID\n  lastRequestID = requestAnimationFrame(displayNextStep);\n}\n\nexport function pauseAnimation(timeOut, lastRequestID, setAnimationState) {\n  // Stop Animation\n  cancelAnimationFrame(lastRequestID.current);\n  clearTimeout(timeOut.current);\n  setAnimationState('paused');\n}\n","/* eslint-disable no-plusplus */\nimport React, { useState, useRef } from 'react';\nimport ToolMenu from './ToolMenu';\nimport Grid2D from './Grid2D';\n// import DFS from './DFS';\nimport BFS from './BFS';\nimport { playAnimation, pauseAnimation } from './Animation';\n\nfunction Create2DArray(height, width) {\n  const arr = [];\n  for (let y = 0; y < height; y++) {\n    arr.push([]);\n    for (let x = 0; x < width; x++) {\n      arr[y].push({\n        pos: { x, y },\n        type: 'empty',\n        visited: false,\n        visiting: false,\n      });\n    }\n  }\n  return arr;\n}\n\nfunction Pathfinding() {\n  const [selectedItem, setSelectedItem] = useState(null);\n  const initialInventory = {\n    player: 1,\n    wall: 50,\n    treasure: 1,\n    empty: Infinity,\n  };\n  const [inventory, setInventory] = useState(initialInventory);\n  const [playerPos, setPlayerPos] = useState(null);\n  const [goalPos, setGoalPos] = useState(null);\n  const [grid, setGrid] = useState(null);\n  const [animationState, setAnimationState] = useState('default');\n  const timeOut = useRef(null);\n  const lastRequestID = useRef(null);\n  const currentStep = useRef(0);\n  const animationQueue = useRef([]);\n\n  const find = () => {\n    const { visits, path } = BFS(playerPos, grid, goalPos);\n\n    if (visits.length > 1) {\n      if (animationQueue.current.length === 0) { // If first time playing animation\n        if (path.length > 0) {\n          animationQueue.current = [{\n            steps: visits,\n            type: 'visits',\n          }, {\n            steps: path,\n            type: 'path',\n          }];\n        } else {\n          animationQueue.current = [{\n            steps: visits,\n            type: 'visits',\n          }];\n        }\n      }\n\n      playAnimation(grid, setGrid, animationQueue, currentStep, lastRequestID, timeOut, 100, setAnimationState);\n    }\n  };\n\n  const reset = () => {\n    pauseAnimation(timeOut, lastRequestID, setAnimationState);\n    currentStep.current = 0;\n    animationQueue.current = [];\n    setGrid(null);\n    setInventory(initialInventory);\n    setAnimationState('init');\n  };\n\n  const pause = () => {\n    pauseAnimation(timeOut, lastRequestID, setAnimationState);\n  };\n\n  return (\n    <div style={{ padding: '30px' }}>\n      <ToolMenu\n        selectedItem={selectedItem}\n        setSelectedItem={setSelectedItem}\n        inventory={inventory}\n        find={find}\n        reset={reset}\n        pause={pause}\n        animationState={animationState}\n      />\n      <Grid2D\n        width={35}\n        height={20}\n        selectedItem={selectedItem}\n        inventory={inventory}\n        setInventory={setInventory}\n        setPlayerPos={setPlayerPos}\n        setGoalPos={setGoalPos}\n        setGrid={setGrid}\n        grid={grid || Create2DArray(20, 35)}\n      />\n    </div>\n  );\n}\n\nexport default Pathfinding;\n","import React, { Component } from 'react';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Grid, Sidebar } from 'semantic-ui-react';\nimport Navbar from './components/Navbar';\nimport SortingClassComponent from './components/sorting/SortingClassComponent';\nimport Pathfinding from './components/pathfinding/Pathfinding';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { visible: true };\n  }\n\n  toggleSidebar = () => this.setState((prevState) => ({ visible: !prevState.visible }))\n\n  render() {\n    const { visible } = this.state;\n    return (\n      <Router>\n        <Grid style={{ margin: '0px' }}>\n          <Grid.Column width={16} style={{ minHeight: '100vh', padding: '0px' }}>\n            <Sidebar.Pushable>\n              <Navbar visible={visible} toggleSidebar={this.toggleSidebar} />\n              <Sidebar.Pusher>\n                <Switch>\n                  <Route path=\"/sorting/:alg\">\n                    <SortingClassComponent />\n                  </Route>\n                  <Route path=\"/pathfinding/:alg\">\n                    <Pathfinding />\n                  </Route>\n                  <Route path=\"/\">\n                    <SortingClassComponent />\n                  </Route>\n                </Switch>\n              </Sidebar.Pusher>\n            </Sidebar.Pushable>\n          </Grid.Column>\n        </Grid>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}