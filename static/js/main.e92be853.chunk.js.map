{"version":3,"sources":["components/Navbar.js","components/Pathfinding.js","components/sorting/sorting-algorithms.js","components/sorting/Animation.js","components/sorting/Bar.js","components/sorting/SortingClassComponent.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","toggleOpenSidebarBtn","setState","prevState","showOpenSidebarBtn","state","this","toggleSidebar","visible","Nav","exact","to","onClick","className","activeClassName","children","Transition","animation","duration","Button","icon","id","Icon","name","Sidebar","as","Menu","inverted","direction","vertical","width","onHidden","onVisible","style","zIndex","Item","role","tabIndex","float","onKeyUp","Header","Component","Pathfinding","swap","a","b","arr","temp","BubbleSort","list","steps","swapped","count","push","action","pos","length","label","i","j","orderedList","info","title","worstTime","bestTime","avgTime","space","InsertionSort","forEach","el","SelectionSort","sortedArrLen","cur","partition","left","right","pivotIdx","QuickSort","lowerBound","upperBound","Math","floor","index","leftSubArrayIsSmaller","defaultColor","resetAnimation","currentStep","timeOut","lastRequestID","bars","setAnimationState","cancelAnimationFrame","current","clearTimeout","ref","num","backgroundColor","querySelector","height","innerText","display","resetbarRefs","Bar","React","forwardRef","ref2","useRef","maxWidth","SortingClassComponent","getAlgOutput","path","algOutput","slice","createBarsFromList","localBars","map","createRef","key","animationState","changeSpeed","e","speedPercentageRef","target","value","speedPercentage","lastCompared","lastSwapped","lastCursor1Pos","lastCursor2Pos","lastCursor3Pos","match","alg","params","prevProps","console","log","Grid","stackable","Row","Column","content","disabled","playAnimation","requestAnimationFrame","step","iHeight","jHeight","iColor","jColor","parseInt","setTimeout","type","min","max","onChange","withRouter","App","margin","minHeight","padding","Pushable","Pusher","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e92be853.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { Component } from 'react';\nimport {\n  Menu,\n  Sidebar,\n  Button,\n  Transition,\n  Icon,\n} from 'semantic-ui-react';\nimport { NavLink } from 'react-router-dom';\nimport './Navbar.scss';\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { showOpenSidebarBtn: false };\n  }\n\n  toggleOpenSidebarBtn = () => {\n    this.setState((prevState) => ({ showOpenSidebarBtn: !prevState.showOpenSidebarBtn }));\n  };\n\n  render() {\n    const { showOpenSidebarBtn } = this.state;\n    const { toggleSidebar, visible } = this.props;\n\n    const Nav = (props) => (\n      <NavLink\n        exact\n        to={props.to}\n        onClick={props.onClick}\n        className={props.className}\n        activeClassName=\"active\"\n      >\n        {props.children}\n      </NavLink>\n    );\n\n    return (\n      <>\n        <Transition visible={showOpenSidebarBtn} animation=\"fade right\" duration={700}>\n          <Button\n            icon\n            id=\"openSidebarBtn\"\n            onClick={() => toggleSidebar('push')}\n          >\n            <Icon name=\"bars\" />\n          </Button>\n        </Transition>\n\n        <Sidebar\n          as={Menu}\n          inverted\n          animation=\"push\"\n          direction=\"left\"\n          vertical\n          width=\"thin\"\n          visible={visible}\n          onHidden={this.toggleOpenSidebarBtn}\n          onVisible={this.toggleOpenSidebarBtn}\n          style={{ zIndex: 20 }}\n        >\n          <Menu.Item>\n            TOPICS\n            <span\n              id=\"closeSidebarBtn\"\n              role=\"button\"\n              tabIndex={0}\n              style={{ float: 'right' }}\n              onClick={() => toggleSidebar('push')}\n              onKeyUp={() => toggleSidebar('push')}\n            >\n              X\n            </span>\n          </Menu.Item>\n          <Menu.Item>\n            <Menu.Header>Sorting</Menu.Header>\n            <Menu.Menu>\n              <Menu.Item as={Nav} to=\"/sorting/bubble-sort\" name=\"Bubble Sort\" />\n              <Menu.Item as={Nav} to=\"/sorting/selection-sort\" name=\"Selection Sort\" />\n              <Menu.Item as={Nav} to=\"/sorting/insertion-sort\" name=\"Insertion Sort\" />\n              <Menu.Item as={Nav} to=\"/sorting/quick-sort\" name=\"Quick Sort\" />\n            </Menu.Menu>\n          </Menu.Item>\n\n          <Menu.Item>\n            <Menu.Header>Pathfinding</Menu.Header>\n            <Menu.Menu>\n              <Menu.Item as={Nav} to=\"/pathfinding/DFS\" name=\"DFS\" />\n              <Menu.Item as={Nav} to=\"/pathfinding/BFS\" name=\"BFS\" />\n              <Menu.Item as={Nav} to=\"/pathfinding/a-star\" name=\"A Star\" />\n            </Menu.Menu>\n          </Menu.Item>\n        </Sidebar>\n      </>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from 'react';\n\nfunction Pathfinding() {\n  return (\n    <p>Pathfinding Page</p>\n  );\n}\n\nexport default Pathfinding;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable no-plusplus */\n\nfunction swap(a, b, arr) {\n  const temp = arr[b];\n  arr[b] = arr[a];\n  arr[a] = temp;\n}\n\nexport function BubbleSort(list) {\n  const steps = [];\n  let swapped = true;\n  let count = 1;\n  steps.push({ action: 'move cursor1', pos: list.length - count, label: 'cur1' });\n  while (swapped) {\n    swapped = false;\n    for (let i = 0; i < list.length - count; i++) {\n      steps.push({ action: 'compare', i, j: i + 1 });\n      if (list[i] > list[i + 1]) {\n        swapped = true;\n        swap(i, i + 1, list);\n        steps.push({ action: 'swap', i, j: i + 1 });\n      }\n    }\n    count += 1;\n    if (list.length - count >= 0) steps.push({ action: 'move cursor1', pos: list.length - count, label: 'cur1' });\n  }\n  return {\n    orderedList: list,\n    steps,\n    info: {\n      title: 'Bubble Sort',\n      worstTime: 'O(n^2)',\n      bestTime: 'O(n)',\n      avgTime: 'O(n^2)',\n      space: 'O(n)',\n    },\n  };\n}\n\nexport function InsertionSort(list) {\n  const steps = [];\n  list.forEach((el, i) => {\n    let j = i;\n    steps.push({ action: 'move cursor1', pos: i, label: 'cur1' });\n    if (j > 0) steps.push({ action: 'compare', i: j - 1, j });\n    while (j > 0 && list[j - 1] > list[j]) {\n      swap(j - 1, j, list);\n      steps.push({ action: 'swap', i: j - 1, j });\n      j--;\n      if (j > 0) steps.push({ action: 'compare', i: j - 1, j });\n    }\n  });\n  return {\n    orderedList: list,\n    steps,\n    info: {\n      title: 'Insertion Sort',\n      worstTime: 'O(n^2)',\n      bestTime: 'O(n)',\n      avgTime: 'O(n^2)',\n      space: 'O(n)',\n    },\n  };\n}\n\nexport function SelectionSort(list) {\n  const steps = [];\n  let sortedArrLen = 0;\n  while (sortedArrLen < list.length) {\n    let cur = sortedArrLen;\n    steps.push({ action: 'move cursor1', pos: cur, label: 'cur1' });\n    for (let i = sortedArrLen + 1; i < list.length; i++) {\n      steps.push({ action: 'compare', i, j: cur });\n      if (list[i] < list[cur]) {\n        cur = i;\n      }\n    }\n    swap(sortedArrLen, cur, list);\n    steps.push({ action: 'swap', i: sortedArrLen, j: cur });\n    sortedArrLen++;\n  }\n  return {\n    orderedList: list,\n    steps,\n    info: {\n      title: 'Selection Sort',\n      worstTime: 'O(n^2)',\n      bestTime: 'O(n^2)',\n      avgTime: 'O(n^2)',\n      space: 'O(1)',\n    },\n  };\n}\n\nfunction partition(list, left, right, pivotIdx, steps) {\n  steps.push({ action: 'move cursor2', pos: left, label: 'low' });\n  steps.push({ action: 'move cursor3', pos: right, label: 'high' });\n  while (left <= right) {\n    steps.push({ action: 'compare', i: left, j: pivotIdx });\n    while (list[left] < list[pivotIdx]) {\n      steps.push({ action: 'compare', i: left, j: pivotIdx });\n      left++;\n      steps.push({ action: 'move cursor2', pos: left, label: 'low' });\n    }\n\n    steps.push({ action: 'compare', i: right, j: pivotIdx });\n    while (list[pivotIdx] < list[right]) {\n      steps.push({ action: 'compare', i: right, j: pivotIdx });\n      right--;\n      steps.push({ action: 'move cursor3', pos: right, label: 'high' });\n    }\n\n    steps.push({ action: 'compare', i: left, j: right });\n    if (left <= right) {\n      swap(left, right, list);\n      steps.push({ action: 'swap', i: left, j: right });\n\n      if (pivotIdx === left) {\n        pivotIdx = right;\n        steps.push({ action: 'move cursor1', pos: pivotIdx, label: 'pivot' });\n      } else if (pivotIdx === right) {\n        pivotIdx = left;\n        steps.push({ action: 'move cursor1', pos: pivotIdx, label: 'pivot' });\n      }\n\n      left++;\n      steps.push({ action: 'move cursor2', pos: left, label: 'low' });\n\n      right--;\n      steps.push({ action: 'move cursor3', pos: right, label: 'high' });\n    }\n  }\n  return left;\n}\nexport function QuickSort(list, lowerBound = 0, upperBound = list.length - 1, steps = []) {\n  if (lowerBound >= upperBound) {\n    return {\n      orderedList: list,\n      steps,\n      info: {\n        title: 'Quick Sort',\n        worstTime: 'O(n^2)',\n        bestTime: 'O(n * log(n))',\n        avgTime: 'O(n * log(n))',\n        space: 'O(log(n))',\n      },\n    };\n  }\n  const pivotIdx = Math.floor((lowerBound + upperBound) / 2);\n  steps.push({ action: 'move cursor1', pos: pivotIdx, label: 'pivot' });\n  const index = partition(list, lowerBound, upperBound, pivotIdx, steps);\n\n  // Run recursively on the smallest sub-array to optimize space complexity\n  const leftSubArrayIsSmaller = (index - 1) - lowerBound < upperBound - index;\n  if (leftSubArrayIsSmaller) {\n    QuickSort(list, lowerBound, index - 1, steps);\n    QuickSort(list, index, upperBound, steps);\n  } else {\n    QuickSort(list, index, upperBound, steps);\n    QuickSort(list, lowerBound, index - 1, steps);\n  }\n  return {\n    orderedList: list,\n    steps,\n    info: {\n      title: 'Quick Sort',\n      worstTime: 'O(n^2)',\n      bestTime: 'O(n * log(n))',\n      avgTime: 'O(n * log(n))',\n      space: 'O(log(n))',\n    },\n  };\n}\n\nexport default {\n  BubbleSort, InsertionSort, SelectionSort, QuickSort,\n};\n","/* eslint-disable no-param-reassign */\n\nconst defaultColor = 'rgb(116, 172, 255)';\nconst compareColor1 = '#ff7961';\nconst compareColor2 = '#f44336';\n\nexport function playAnimation(currentStep, lastCompared, lastSwapped, lastCursor1Pos, lastCursor2Pos, lastCursor3Pos, lastRequestID,\n  bars, steps, timeOut, speedPercentageRef, setAnimationState) {\n  setAnimationState('playing');\n\n  function displayNextStep() {\n    const step = steps[currentStep.current];\n\n    switch (step.action) {\n      case 'compare':\n        if (bars) {\n          if (lastCompared.current.length > 0) { // Reset colors for last compared columns\n            bars[lastCompared.current[0]].ref.current.style.backgroundColor = defaultColor;\n            bars[lastCompared.current[1]].ref.current.style.backgroundColor = defaultColor;\n          }\n          // Update colors for currently compared columns\n          bars[step.i].ref.current.style.backgroundColor = compareColor1;\n          bars[step.j].ref.current.style.backgroundColor = compareColor2;\n\n          lastCompared.current = [step.i, step.j];\n        }\n\n        break;\n      case 'swap': {\n        if (bars) {\n          // Swap heights, colors, and cursor for currently swapped indexes (giving the illusion that the bars being swapped)\n          const iHeight = bars[step.i].ref.current.querySelector('.bar').style.height;\n          const jHeight = bars[step.j].ref.current.querySelector('.bar').style.height;\n\n          const iColor = bars[step.i].ref.current.style.backgroundColor;\n          const jColor = bars[step.j].ref.current.style.backgroundColor;\n          // Swap values\n          bars[step.i].ref.current.querySelector('.barValue').innerText = parseInt(jHeight, 10);\n          bars[step.j].ref.current.querySelector('.barValue').innerText = parseInt(iHeight, 10);\n          // Swap Heights\n          bars[step.i].ref.current.querySelector('.bar').style.height = jHeight;\n          bars[step.j].ref.current.querySelector('.bar').style.height = iHeight;\n          // Swap colors\n          bars[step.i].ref.current.style.backgroundColor = jColor;\n          bars[step.j].ref.current.style.backgroundColor = iColor;\n          lastSwapped.current = [step.i, step.j];\n        }\n        break;\n      }\n      case 'move cursor1':\n        if (bars) {\n          if (lastCursor1Pos.current !== null) {\n            bars[lastCursor1Pos.current].ref.current.querySelector('.cursor1').style.display = 'none';\n          }\n\n          if (step.pos >= bars.length) {\n            lastCursor1Pos.current = null;\n          } else {\n            bars[step.pos].ref.current.querySelector('.cursor1').style.display = 'block';\n            if (step.label) bars[step.pos].ref.current.querySelector('.cursor1').innerText = step.label;\n            lastCursor1Pos.current = step.pos;\n          }\n\n          if (lastCompared.current.length > 0) { // Reset colors for last compared columns\n            bars[lastCompared.current[0]].ref.current.style.backgroundColor = defaultColor;\n            bars[lastCompared.current[1]].ref.current.style.backgroundColor = defaultColor;\n          }\n          if (lastSwapped.current.length > 0) { // Reset colors for last swapped columns\n            bars[lastSwapped.current[0]].ref.current.style.backgroundColor = defaultColor;\n            bars[lastSwapped.current[1]].ref.current.style.backgroundColor = defaultColor;\n          }\n        }\n        break;\n      case 'move cursor2':\n        if (bars) {\n          if (lastCursor2Pos.current !== null) {\n            bars[lastCursor2Pos.current].ref.current.querySelector('.cursor2').style.display = 'none';\n          }\n\n          if (step.pos >= bars.length) {\n            lastCursor2Pos.current = null;\n          } else {\n            bars[step.pos].ref.current.querySelector('.cursor2').style.display = 'block';\n            if (step.label) bars[step.pos].ref.current.querySelector('.cursor2').innerText = step.label;\n            lastCursor2Pos.current = step.pos;\n          }\n\n          if (lastCompared.current.length > 0) { // Reset colors for last compared columns\n            bars[lastCompared.current[0]].ref.current.style.backgroundColor = defaultColor;\n            bars[lastCompared.current[1]].ref.current.style.backgroundColor = defaultColor;\n          }\n          if (lastSwapped.current.length > 0) { // Reset colors for last swapped columns\n            bars[lastSwapped.current[0]].ref.current.style.backgroundColor = defaultColor;\n            bars[lastSwapped.current[1]].ref.current.style.backgroundColor = defaultColor;\n          }\n        }\n        break;\n      case 'move cursor3':\n        if (bars) {\n          if (lastCursor3Pos.current !== null) {\n            bars[lastCursor3Pos.current].ref.current.querySelector('.cursor3').style.display = 'none';\n          }\n\n          if (step.pos >= bars.length) {\n            lastCursor3Pos.current = null;\n          } else {\n            bars[step.pos].ref.current.querySelector('.cursor3').style.display = 'block';\n            if (step.label) bars[step.pos].ref.current.querySelector('.cursor3').innerText = step.label;\n            lastCursor3Pos.current = step.pos;\n          }\n\n          if (lastCompared.current.length > 0) { // Reset colors for last compared columns\n            bars[lastCompared.current[0]].ref.current.style.backgroundColor = defaultColor;\n            bars[lastCompared.current[1]].ref.current.style.backgroundColor = defaultColor;\n          }\n          if (lastSwapped.current.length > 0) { // Reset colors for last swapped columns\n            bars[lastSwapped.current[0]].ref.current.style.backgroundColor = defaultColor;\n            bars[lastSwapped.current[1]].ref.current.style.backgroundColor = defaultColor;\n          }\n        }\n        break;\n      default:\n        console.log('default case');\n        break;\n    }\n    currentStep.current += 1;\n    if (currentStep.current < steps.length) {\n      timeOut.current = setTimeout(() => playAnimation(currentStep,\n        lastCompared,\n        lastSwapped,\n        lastCursor1Pos,\n        lastCursor2Pos,\n        lastCursor3Pos,\n        lastRequestID,\n        bars,\n        steps,\n        timeOut,\n        speedPercentageRef,\n        setAnimationState),\n      -20 * speedPercentageRef.current + 2000);\n    } else {\n      setAnimationState('done');\n    }\n  }\n  // Update AnimationFrame RequestID\n  lastRequestID.current = requestAnimationFrame(displayNextStep);\n}\n\n\nexport function pauseAnimation(timeOut, lastRequestID, setAnimationState) {\n  // Stop Animation\n  cancelAnimationFrame(lastRequestID.current);\n  clearTimeout(timeOut.current);\n  setAnimationState('paused');\n}\n\nfunction resetbarRefs(bars, list) {\n  list.forEach((num, i) => {\n    bars[i].ref.current.style.backgroundColor = defaultColor;\n    bars[i].ref.current.querySelector('.bar').style.height = `${num}vh`;\n    bars[i].ref.current.querySelector('.barValue').innerText = `${num}`;\n    bars[i].ref.current.querySelector('.cursor1').style.display = 'none';\n    bars[i].ref.current.querySelector('.cursor2').style.display = 'none';\n    bars[i].ref.current.querySelector('.cursor3').style.display = 'none';\n  });\n}\nexport function resetAnimation(currentStep, timeOut, lastRequestID, bars, list, setAnimationState) {\n  setAnimationState('init');\n  // Stop Animation\n  cancelAnimationFrame(lastRequestID.current);\n  clearTimeout(timeOut.current);\n  // Reset currentStep and bars\n  currentStep.current = 0;\n  if (bars.length > 0 && bars[0].ref.current) resetbarRefs(bars, list);\n}\n","import React, { useRef } from 'react';\n\nconst Bar = React.forwardRef((props, ref) => {\n  const { num, height } = props;\n  const ref2 = useRef(null);\n\n  return (\n    <div\n      ref={ref}\n      className=\"barContainer\"\n      style={{ width: `${height}vw`, maxWidth: '50px' }}\n    >\n      <div className=\"cursor1\">cur 1</div>\n      <div className=\"cursor2\">cur 2</div>\n      <div className=\"cursor3\">cur 3</div>\n      <div className=\"barValue\">{num}</div>\n      <div\n        ref={ref2}\n        style={{ height: `${num}vh` }}\n        className=\"bar\"\n      />\n    </div>\n  );\n});\nexport default Bar;\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-plusplus */\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Button, Grid } from 'semantic-ui-react';\nimport './Sorting.scss';\nimport {\n  BubbleSort, SelectionSort, InsertionSort, QuickSort,\n} from './sorting-algorithms';\nimport { playAnimation, pauseAnimation, resetAnimation } from './Animation';\nimport Bar from './Bar';\n\n\nclass SortingClassComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [20, 64, 23, 35, 35, 75, 34, 69,\n        76, 57, 9, 67, 33, 58, 7, 27, 22,\n        56, 37, 5, 79, 36, 46, 65],\n      info: '',\n      steps: [],\n      animationState: 'init',\n      speedPercentage: 100,\n    };\n    this.currentStep = React.createRef();\n    this.lastCompared = React.createRef();\n    this.lastSwapped = React.createRef();\n    this.lastCursor1Pos = React.createRef();\n    this.lastCursor2Pos = React.createRef();\n    this.lastCursor3Pos = React.createRef();\n    this.lastRequestID = React.createRef();\n    this.timeOut = React.createRef();\n    this.speedPercentageRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { match } = this.props;\n\n    this.currentStep.current = 0;\n    this.lastCompared.current = [];\n    this.lastSwapped.current = [];\n    this.lastCursor1Pos.current = null;\n    this.lastCursor2Pos.current = null;\n    this.lastCursor3Pos.current = null;\n    this.lastRequestID.current = null;\n    this.timeOut.current = null;\n    this.speedPercentageRef.current = 100;\n\n    const alg = match.params.alg ? match.params.alg : 'bubble-sort';\n    this.getAlgOutput(alg);\n    this.createBarsFromList();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.match.params.alg !== prevProps.match.params.alg) {\n      console.log('Route change!');\n      this.getAlgOutput(this.props.match.params.alg);\n      resetAnimation(this.currentStep, this.timeOut, this.lastRequestID, this.state.bars, this.state.list, this.setAnimationState);\n    }\n  }\n\n  getAlgOutput = (path) => {\n    let algOutput = null;\n\n    switch (path) {\n      case 'bubble-sort':\n        algOutput = BubbleSort(this.state.list.slice());\n        break;\n      case 'selection-sort':\n        algOutput = SelectionSort(this.state.list.slice());\n        break;\n      case 'insertion-sort':\n        algOutput = InsertionSort(this.state.list.slice());\n        break;\n      case 'quick-sort':\n        algOutput = QuickSort(this.state.list.slice());\n        break;\n      default:\n        algOutput = BubbleSort(this.state.list.slice());\n        break;\n    }\n    if (algOutput !== null) {\n      this.setState({ steps: algOutput.steps });\n      this.setState({ info: algOutput.info });\n    }\n  }\n\n  createBarsFromList = () => {\n    const { list } = this.state;\n    const localBars = list.map((num, i) => {\n      const ref = React.createRef();\n      const bar = <Bar key={i} ref={ref} num={num} height={((100 * (12 / 16)) - 20) / this.state.list.length} />;\n      return bar;\n    });\n    this.setState({ bars: localBars });\n  }\n\n  setAnimationState = (animationState) => {\n    this.setState({ animationState });\n  }\n\n  changeSpeed = (e) => {\n    this.speedPercentageRef.current = e.target.value;\n    this.setState({ speedPercentage: e.target.value });\n  }\n\n\n  render() {\n    return (\n      <Grid stackable id=\"container\">\n        <Grid.Row>\n          <Grid.Column width={3}>\n            <h1>{this.state.info.title}</h1>\n            <p>\n              <span>{'Worst Time: '}</span>\n              <span>{this.state.info.worstTime}</span>\n              <br />\n              <span>{'Avg. Time: '}</span>\n              <span>{this.state.info.avgTime}</span>\n              <br />\n              <span>{'Best Time: '}</span>\n              <span>{this.state.info.bestTime}</span>\n              <br />\n              <span>{'Space: '}</span>\n              <span>{this.state.info.space}</span>\n            </p>\n          </Grid.Column>\n          <Grid.Column width={13}>\n            {this.state.animationState === 'playing'\n              ? <Button id=\"pauseBtn\" icon=\"pause\" content=\"Pause\" onClick={() => pauseAnimation(this.timeOut, this.lastRequestID, this.setAnimationState)} />\n              : (\n                <Button\n                  id=\"playBtn\"\n                  disabled={this.state.animationState === 'done'}\n                  icon=\"play\"\n                  content=\"Play\"\n                  onClick={() => {\n                    playAnimation(this.currentStep, this.lastCompared, this.lastSwapped, this.lastCursor1Pos, this.lastCursor2Pos, this.lastCursor3Pos, this.lastRequestID,\n                      this.state.bars, this.state.steps, this.timeOut, this.speedPercentageRef,\n                      this.setAnimationState);\n                  }}\n                />\n              )}\n            <Button\n              id=\"resetBtn\"\n              icon=\"repeat\"\n              content=\"Reset\"\n              onClick={() => resetAnimation(this.currentStep, this.timeOut, this.lastRequestID, this.state.bars, this.state.list, this.setAnimationState)}\n            />\n            {' Speed: '}\n            <input\n              id=\"speedSlider\"\n              type=\"range\"\n              min={0}\n              max={100}\n              value={this.state.speedPercentage}\n              onChange={this.changeSpeed}\n            />\n            {`${this.state.speedPercentage}%`}\n            <br />\n            <br />\n            {this.state.bars}\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n\nexport default withRouter(SortingClassComponent);\n","import React, { Component } from 'react';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Grid, Sidebar } from 'semantic-ui-react';\nimport Navbar from './components/Navbar';\nimport Pathfinding from './components/Pathfinding';\nimport SortingClassComponent from './components/sorting/SortingClassComponent';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { visible: true };\n  }\n\n  toggleSidebar = () => this.setState((prevState) => ({ visible: !prevState.visible }))\n\n  render() {\n    const { visible } = this.state;\n    return (\n      <Router>\n        <Grid style={{ margin: '0px' }}>\n          <Grid.Column width={16} style={{ minHeight: '100vh', padding: '0px' }}>\n            <Sidebar.Pushable>\n              <Navbar visible={visible} toggleSidebar={this.toggleSidebar} />\n              <Sidebar.Pusher>\n                <Switch>\n                  <Route path=\"/sorting/:alg\">\n                    <SortingClassComponent />\n                  </Route>\n                  <Route path=\"/pathfinding\">\n                    <Pathfinding />\n                  </Route>\n                  <Route path=\"/\">\n                    <SortingClassComponent />\n                  </Route>\n                </Switch>\n              </Sidebar.Pusher>\n            </Sidebar.Pushable>\n          </Grid.Column>\n        </Grid>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}